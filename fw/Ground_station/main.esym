C L "MAIN" 0 14 5 "FUNCTION"
C L "MAIN" 0 14 2 "FUNCTION"
D G "__PCD__" 0 409 ""4.084""
D G "__DEVICE__" 0 409 "4013"
D G "__DATE__" 0 409 ""18-÷Â‚-10""
D G "__TIME__" 0 409 ""16:56:53"" "Standard Header file for the DSPIC30F4013 device ////////////////"
d G "PIN_A11" 2 25 "5659"
d G "PIN_B0" 2 27 "5696"
d G "PIN_B1" 2 28 "5697"
d G "PIN_B2" 2 29 "5698"
d G "PIN_B3" 2 30 "5699"
d G "PIN_B4" 2 31 "5700"
d G "PIN_B5" 2 32 "5701"
d G "PIN_B6" 2 33 "5702"
d G "PIN_B7" 2 34 "5703"
d G "PIN_B8" 2 35 "5704"
d G "PIN_B9" 2 36 "5705"
d G "PIN_B10" 2 37 "5706"
d G "PIN_B11" 2 38 "5707"
d G "PIN_B12" 2 39 "5708"
d G "PIN_C13" 2 41 "5757"
d G "PIN_C14" 2 42 "5758"
d G "PIN_C15" 2 43 "5759"
d G "PIN_D0" 2 45 "5792"
d G "PIN_D1" 2 46 "5793"
d G "PIN_D2" 2 47 "5794"
d G "PIN_D3" 2 48 "5795"
d G "PIN_D8" 2 49 "5800"
d G "PIN_D9" 2 50 "5801"
d G "PIN_F0" 2 52 "5888"
d G "PIN_F1" 2 53 "5889"
d G "PIN_F2" 2 54 "5890"
d G "PIN_F3" 2 55 "5891"
d G "PIN_F4" 2 56 "5892"
d G "PIN_F5" 2 57 "5893"
d G "PIN_F6" 2 58 "5894"
d G "FALSE" 2 61 "0"
d G "TRUE" 2 62 "1"
d G "BYTE" 2 64 "unsigned int8"
d G "BOOLEAN" 2 65 "int1"
d G "getc" 2 67 "getch"
d G "fgetc" 2 68 "getch"
d G "getchar" 2 69 "getch"
d G "putc" 2 70 "putchar"
d G "fputc" 2 71 "putchar"
d G "fgets" 2 72 "gets"
d G "fputs" 2 73 "puts"
d G "UART_ADDRESS" 2 79 "2"
d G "UART_DATA" 2 80 "4"
d G "UART_AUTODETECT" 2 81 "8"
d G "UART_AUTODETECT_NOWAIT" 2 82 "9"
d G "UART_WAKEUP_ON_RDA" 2 83 "10"
d G "UART_SEND_BREAK" 2 84 "13"
d G "WDT_ON" 2 91 "1"
d G "WDT_OFF" 2 92 "0"
d G "RESTART_POWER_UP" 2 97 "0"
d G "RESTART_BROWNOUT" 2 98 "1"
d G "RESTART_WATCHDOG" 2 99 "4"
d G "RESTART_SOFTWARE" 2 100 "6"
d G "RESTART_MCLR" 2 101 "7"
d G "RESTART_ILLEGAL_OP" 2 102 "14"
d G "RESTART_TRAP_CONFLICT" 2 103 "15"
d G "SLEEP_FULL" 2 106 "0" "Default"
d G "SLEEP_IDLE" 2 107 "1" "Clock and peripherals don't stop"
d G "OSC_INTERNAL" 2 111 "32"
d G "OSC_CRYSTAL" 2 112 "1"
d G "OSC_CLOCK" 2 113 "2"
d G "OSC_RC" 2 114 "3"
d G "OSC_SECONDARY" 2 115 "16"
d G "TMR_DISABLED" 2 122 "0x0000"
d G "TMR_INTERNAL" 2 123 "0xA000"
d G "TMR_EXTERNAL" 2 124 "0xA002"
d G "TMR_GATE" 2 125 "0x0040"
d G "T1_EXTERNAL_SYNC" 2 126 "0xA006" "This only applies to Timer1"
d G "T1_EXTERNAL_RTC" 2 127 "0xC002" "This only applies to Timer1"
d G "TMR_DIV_BY_1" 2 129 "0x0000"
d G "TMR_DIV_BY_8" 2 130 "0x0010"
d G "TMR_DIV_BY_64" 2 131 "0x0020"
d G "TMR_DIV_BY_256" 2 132 "0x0030"
d G "TMR_32_BIT" 2 133 "0x0008" "Only for even numbered timers"
d G "CAPTURE_OFF" 2 139 "0x0000" "Capture OFF"
d G "CAPTURE_EE" 2 140 "0x0001" "Capture Every Edge"
d G "CAPTURE_FE" 2 141 "0x0002" "Capture Falling Edge"
d G "CAPTURE_RE" 2 142 "0x0003" "Capture Rising Edge"
d G "CAPTURE_DIV_4" 2 143 "0x0004" "Capture Every 4th Rising Edge"
d G "CAPTURE_DIV_16" 2 144 "0x0005" "Capture Every 16th Rising Edge"
d G "CAPTURE_INTERRUPT_ONLY" 2 145 "0x0007" "Interrupt on Rising Edge when in Sleep or Idle"
d G "INTERRUPT_EVERY_CAPTURE" 2 148 "0x0000" "Interrupt on every capture event"
d G "INTERRUPT_SECOND_CAPTURE" 2 149 "0x0020" "Interrupt on every second capture event"
d G "INTERRUPT_THIRD_CAPTURE" 2 150 "0x0040" "Interrupt on every third capture event"
d G "INTERRUPT_FOURTH_CAPTURE" 2 151 "0x0060" "Interrupt on every fourth capture event"
d G "CAPTURE_TIMER2" 2 154 "0x0080" "On capture event Timer 2 is captured"
d G "CAPTURE_TIMER3" 2 155 "0x0000" "On capture event Timer 3 is captured"
d G "CAPTURE_HALT_IDLE" 2 158 "0x2000" "Capture module halts during idle mode"
d G "CAPTURE_CONTINUE_IDLE" 2 159 "0x0000" "Capture module continues during idle mode"
d G "COMPARE_OFF" 2 165 "0x0000" "Compare OFF"
d G "COMPARE_SET_ON_MATCH" 2 166 "0x0001" "Pin from low to high on match"
d G "COMPARE_CLR_ON_MATCH" 2 167 "0x0002" "Pin from high to low on match"
d G "COMPARE_TOGGEL" 2 168 "0x0003" "Pin will toggle on every match occurrence"
d G "COMPARE_SINGLE_PULSE" 2 169 "0x0004" "Pin will generate single pulse on first match"
d G "COMPARE_CONT_PULSE" 2 170 "0x0005" "Pin will pulse for every match"
d G "COMPARE_PWM" 2 171 "0x0006" "Compare operates as PWM with fault pin disabled"
d G "COMPARE_PWM_FAULT" 2 172 "0x0007" "Compare operates as PWM with fault pin enabled"
d G "COMPARE_TIMER2" 2 175 "0x0000" "Timer 2 is the base timer"
d G "COMPARE_TIMER3" 2 176 "0x0008" "Timer 3 is the base timer"
d G "COMPARE_HALT_IDLE" 2 179 "0x2000" "Compare module halts during idle mode"
d G "COMPARE_CONTINUE_IDLE" 2 180 "0x0000" "Compare module continues during idle mode"
d G "SPI_MASTER" 2 186 "0x0020"
d G "SPI_SLAVE" 2 187 "0x1000"
d G "SPI_L_TO_H" 2 188 "0"
d G "SPI_H_TO_L" 2 189 "0x0100"
d G "SPI_CLK_DIV_1" 2 190 "0x001F"
d G "SPI_CLK_DIV_4" 2 191 "0x001E"
d G "SPI_CLK_DIV_16" 2 192 "0x001D"
d G "SPI_MODE_16B" 2 193 "0x0400"
d G "SPI_SS_DISABLED" 2 194 "0x8000"
d G "ADC_OFF" 2 203 "0x10000"
d G "ADC_CLOCK" 2 204 "0x0000" "External"
d G "ADC_CLOCK_DIV_2" 2 205 "0x0001"
d G "ADC_CLOCK_DIV_4" 2 206 "0x0003"
d G "ADC_CLOCK_DIV_8" 2 207 "0x0007"
d G "ADC_CLOCK_DIV_16" 2 208 "0x000F"
d G "ADC_CLOCK_DIV_32" 2 209 "0x001F"
d G "ADC_CLOCK_DIV_64" 2 210 "0x003F"
d G "ADC_CLOCK_INTERNAL" 2 211 "0x0080" "Internal"
d G "ADC_TAD_MUL_0" 2 215 "0x0000"
d G "ADC_TAD_MUL_2" 2 216 "0x0200"
d G "ADC_TAD_MUL_4" 2 217 "0x0400"
d G "ADC_TAD_MUL_8" 2 218 "0x0800"
d G "ADC_TAD_MUL_16" 2 219 "0x1000"
d G "ADC_TAD_MUL_31" 2 220 "0x1F00"
d G "ADC_START_AND_READ" 2 223 "0x07"
d G "ADC_START_ONLY" 2 224 "0x01"
d G "ADC_READ_ONLY" 2 225 "0x06"
d G "sAN0" 2 230 "0x0001" "| B0"
d G "sAN1" 2 231 "0x0002" "| B1"
d G "sAN2" 2 232 "0x0004" "| B2"
d G "sAN3" 2 233 "0x0008" "| B3"
d G "sAN4" 2 234 "0x0010" "| B4"
d G "sAN5" 2 235 "0x0020" "| B5"
d G "sAN6" 2 236 "0x0040" "| B6"
d G "sAN7" 2 237 "0x0080" "| B7"
d G "sAN8" 2 238 "0x0100" "| B8"
d G "sAN9" 2 239 "0x0200" "| B9"
d G "sAN10" 2 240 "0x0400" "| B10"
d G "sAN11" 2 241 "0x0800" "| B11"
d G "sAN12" 2 242 "0x1000" "| B12"
d G "NO_ANALOGS" 2 243 "0" "None"
d G "ALL_ANALOG" 2 244 "0xFFFFFFFF" "Optional Second argument:"
d G "VSS_VDD" 2 247 "0x0000" "Range 0-Vdd"
d G "VREF_VREF" 2 248 "0x3000" "Range VrefL-VrefH"
d G "VREF_VDD" 2 249 "0x2000" "Range VrefL-Vdd"
d G "VSS_VREF" 2 250 "0x1000" "Range 0-VrefH"
d G "MULTICHANNEL_MODE" 2 257 "0x0000"
d G "I2S_MODE" 2 258 "0x0001"
d G "AC97_16BIT_MODE" 2 259 "0x0002"
d G "AC97_20BIT_MODE" 2 260 "0x0003"
d G "JUSTIFY_DATA" 2 262 "0x0020" "Start data transmission on the same clock cycle as COFS pulses (multichannel)"
d G "MULTI_DEVICE_BUS" 2 263 "0x0040" "Tri-states the CSDO pin during unused time slots, normally drives '0'"
d G "UNDERFLOW_LAST" 2 265 "0x0080" "Transmits the last written value to the dci when data underflow occurs. Default is undeflow silence."
d G "UNDERFLOW_SILENCE" 2 266 "0x0000" "Transmit '0's on data undeflow. This will cause a clicking noise if you are underflowing data while outputing to a codec."
d G "DCI_SLAVE" 2 268 "0x0100" "Default is master"
d G "DCI_MASTER" 2 269 "0x0000"
d G "SAMPLE_FALLING_EDGE" 2 271 "0x0000" "Default is Sample on the rising edge of the clock"
d G "SAMPLE_RISING_EDGE" 2 272 "0x0200"
d G "DCI_CLOCK_INPUT" 2 274 "0x0400" "SCLK is an input (supplied by codec or external source)"
d G "DCI_CLOCK_OUTPUT" 2 275 "0x0000" "Default is clock output"
d G "ENABLE_LOOPBACK" 2 277 "0x0800" "Connect the CSDI/CSDO internally; loops all of the sound back onto the bus"
d G "CODEC_MULTICHANNEL" 2 279 "0x0000" "enables multichannel (generic) codec support"
d G "CODEC_I2S" 2 280 "0x0001" "enables the I2S protocol"
d G "CODEC_AC16" 2 281 "0x0002" "enables the AC-16 protocol, setupCodecTransmission has no effect"
d G "CODEC_AC20" 2 282 "0x0003" "enables the AC-20 protocol, setupCodecTransmission has no effect"
d G "BUS_MASTER" 2 284 "0x0000" "designates this device as the bus master"
d G "BUS_SLAVE" 2 285 "0x0300" "designates this device as a slave on a bus controlled by another codec"
d G "TRISTATE_BUS" 2 287 "0x0040" "when in master mode, the module will be in high impedance"
d G "SYNC_COFS_DATA_PULSE" 2 289 "0x0020" "signifies that data starts transmitting on the same SCK pulse as the edge of the COFS pulse"
d G "SAMPLE_RISING" 2 292 "0x0200" "sample data on the rising edge of the clock"
d G "SAMPLE_FALLING" 2 293 "0x0000" "sample data on the falling edge of the clock"
d G "DCI_4BIT_WORD" 2 295 "0x0003"
d G "DCI_5BIT_WORD" 2 296 "0x0004"
d G "DCI_6BIT_WORD" 2 297 "0x0005"
d G "DCI_7BIT_WORD" 2 298 "0x0006"
d G "DCI_8BIT_WORD" 2 299 "0x0007"
d G "DCI_9BIT_WORD" 2 300 "0x0008"
d G "DCI_10BIT_WORD" 2 301 "0x0009"
d G "DCI_11BIT_WORD" 2 302 "0x000A"
d G "DCI_12BIT_WORD" 2 303 "0x000B"
d G "DCI_13BIT_WORD" 2 304 "0x000C"
d G "DCI_14BIT_WORD" 2 305 "0x000D"
d G "DCI_15BIT_WORD" 2 306 "0x000E"
d G "DCI_16BIT_WORD" 2 307 "0x000F"
d G "DCI_1WORD_FRAME" 2 309 "0x0000"
d G "DCI_2WORD_FRAME" 2 310 "0x0010 << 1"
d G "DCI_3WORD_FRAME" 2 311 "0x0020 << 1"
d G "DCI_4WORD_FRAME" 2 312 "0x0030 << 1"
d G "DCI_5WORD_FRAME" 2 313 "0x0040 << 1"
d G "DCI_6WORD_FRAME" 2 314 "0x0050 << 1"
d G "DCI_7WORD_FRAME" 2 315 "0x0060 << 1"
d G "DCI_8WORD_FRAME" 2 316 "0x0070 << 1"
d G "DCI_9WORD_FRAME" 2 317 "0x0080 << 1"
d G "DCI_10WORD_FRAME" 2 318 "0x0090 << 1"
d G "DCI_11WORD_FRAME" 2 319 "0x00A0 << 1"
d G "DCI_12WORD_FRAME" 2 320 "0x00B0 << 1"
d G "DCI_13WORD_FRAME" 2 321 "0x00C0 << 1"
d G "DCI_14WORD_FRAME" 2 322 "0x00D0 << 1"
d G "DCI_15WORD_FRAME" 2 323 "0x00E0 << 1"
d G "DCI_16WORD_FRAME" 2 324 "0x00F0 << 1"
d G "DCI_1WORD_INTERRUPT" 2 326 "0x0000"
d G "DCI_2WORD_INTERRUPT" 2 327 "0x0400"
d G "DCI_3WORD_INTERRUPT" 2 328 "0x0800"
d G "DCI_4WORD_INTERRUPT" 2 329 "0x0C00"
d G "RECEIVE_NONE" 2 331 "0x0000"
d G "RECEIVE_ALL" 2 332 "0xFFFF"
d G "RECEIVE_SLOT0" 2 333 "0x0001"
d G "RECEIVE_SLOT1" 2 334 "0x0002"
d G "RECEIVE_SLOT2" 2 335 "0x0004"
d G "RECEIVE_SLOT3" 2 336 "0x0008"
d G "RECEIVE_SLOT4" 2 337 "0x0010"
d G "RECEIVE_SLOT5" 2 338 "0x0020"
d G "RECEIVE_SLOT6" 2 339 "0x0040"
d G "RECEIVE_SLOT7" 2 340 "0x0080"
d G "RECEIVE_SLOT8" 2 341 "0x0100"
d G "RECEIVE_SLOT9" 2 342 "0x0200"
d G "RECEIVE_SLOT10" 2 343 "0x0400"
d G "RECEIVE_SLOT11" 2 344 "0x0800"
d G "RECEIVE_SLOT12" 2 345 "0x1000"
d G "RECEIVE_SLOT13" 2 346 "0x2000"
d G "RECEIVE_SLOT14" 2 347 "0x4000"
d G "RECEIVE_SLOT15" 2 348 "0x8000"
d G "TRANSMIT_NONE" 2 350 "0x0000"
d G "TRANSMIT_ALL" 2 351 "0xFFFF"
d G "TRANSMIT_SLOT0" 2 352 "0x0001"
d G "TRANSMIT_SLOT1" 2 353 "0x0002"
d G "TRANSMIT_SLOT2" 2 354 "0x0004"
d G "TRANSMIT_SLOT3" 2 355 "0x0008"
d G "TRANSMIT_SLOT4" 2 356 "0x0010"
d G "TRANSMIT_SLOT5" 2 357 "0x0020"
d G "TRANSMIT_SLOT6" 2 358 "0x0040"
d G "TRANSMIT_SLOT7" 2 359 "0x0080"
d G "TRANSMIT_SLOT8" 2 360 "0x0100"
d G "TRANSMIT_SLOT9" 2 361 "0x0200"
d G "TRANSMIT_SLOT10" 2 362 "0x0400"
d G "TRANSMIT_SLOT11" 2 363 "0x0800"
d G "TRANSMIT_SLOT12" 2 364 "0x1000"
d G "TRANSMIT_SLOT13" 2 365 "0x2000"
d G "TRANSMIT_SLOT14" 2 366 "0x4000"
d G "TRANSMIT_SLOT15" 2 367 "0x8000"
d G "L_TO_H" 2 376 "0x40"
d G "H_TO_L" 2 377 "0"
d G "INTR_GLOBAL" 2 380 "0x400"
d G "INTR_NORMAL" 2 381 "0x100"
d G "INTR_ALTERNATE" 2 382 "0x200"
d G "INTR_NESTING" 2 383 "0x300"
d G "INTR_LEVEL0" 2 384 "0x500"
d G "INTR_LEVEL1" 2 385 "0x501"
d G "INTR_LEVEL2" 2 386 "0x502"
d G "INTR_LEVEL3" 2 387 "0x503"
d G "INTR_LEVEL4" 2 388 "0x504"
d G "INTR_LEVEL5" 2 389 "0x505"
d G "INTR_LEVEL6" 2 390 "0x506"
d G "INTR_LEVEL7" 2 391 "0x507"
d G "INTR_CN_PIN" 2 393 "0x8000" "or in a PIN_xx constant"
d G "INT_OSCFAIL" 2 395 "1"
d G "INT_ADDRERR" 2 396 "2"
d G "INT_STACKERR" 2 397 "3"
d G "INT_MATHERR" 2 398 "4"
d G "INT_DMAERR" 2 399 "5"
d G "INT_EXT0" 2 400 "6"
d G "INT_IC1" 2 401 "7"
d G "INT_OC1" 2 402 "8"
d G "INT_TIMER1" 2 403 "9"
d G "INT_IC2" 2 404 "10"
d G "INT_OC2" 2 405 "11"
d G "INT_TIMER2" 2 406 "12"
d G "INT_TIMER3" 2 407 "13"
d G "INT_SPI1" 2 408 "14"
d G "INT_RDA" 2 409 "15"
d G "INT_TBE" 2 410 "16"
d G "INT_ADC1" 2 411 "17"
d G "INT_EEPROM" 2 412 "18"
d G "INT_SI2C" 2 413 "19"
d G "INT_MI2C" 2 414 "20"
d G "INT_CNI" 2 415 "21"
d G "INT_EXT1" 2 416 "22"
d G "INT_EXT2" 2 417 "35"
d G "INT_RDA2" 2 418 "36"
d G "INT_TBE2" 2 419 "37"
d G "INT_CAN1" 2 420 "39"
d G "INT_LOWVOLT" 2 421 "64"
D G "_STDIO" 3 12 ""
D G "_STRING" 4 12 ""
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 21 "unsigned int8"
D G "wchar_t" 5 22 "char"
D G "NULL" 5 23 "0"
D G "offsetof" 5 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 4 19 10 "FUNCTION"
F G "memmove" 4 34 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int8"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
D G "strcopy" 4 54 "strcpy"
C L "strncpy" 4 19 4 "FUNCTION"
F G "strncpy" 4 61 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 61 "*int8"
V L "s2" 4 61 "*int8"
V L "n" 4 61 "int8"
V L "s" 4 63 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
F G "strcat" 4 78 "*int8(*int8 s1,*int8 s2)"
V L "s1" 4 78 "*int8"
V L "s2" 4 78 "*int8"
V L "s" 4 80 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
F G "strncat" 4 96 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 96 "*int8"
V L "s2" 4 96 "*int8"
V L "n" 4 96 "int8"
V L "s" 4 98 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
F G "memcmp" 4 120 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 120 "*int8"
V L "s2" 4 120 "*int8"
V L "n" 4 120 "int8"
V L "su1" 4 122 "*int8"
V L "su2" 4 122 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
F G "strcmp" 4 134 "sint8(*int8 s1,*int8 s2)"
V L "s1" 4 134 "*int8"
V L "s2" 4 134 "*int8"
C L "strcoll" 4 19 2 "FUNCTION"
F G "strcoll" 4 144 "sint8(*int8 s1,*int8 s2)"
V L "s1" 4 144 "*int8"
V L "s2" 4 144 "*int8"
C L "strncmp" 4 19 4 "FUNCTION"
F G "strncmp" 4 157 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 157 "*int8"
V L "s2" 4 157 "*int8"
V L "n" 4 157 "int8"
C L "strxfrm" 4 19 3 "FUNCTION"
F G "strxfrm" 4 169 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 4 169 "*int8"
V L "s2" 4 169 "*int8"
V L "n" 4 169 "int8"
V L "s" 4 171 "*int8"
V L "n1" 4 172 "int8"
C L "memchr" 4 19 3 "FUNCTION"
F G "memchr" 4 191 "*int8(*int8 s,int8 c,int8 n)"
V L "s" 4 191 "*int8"
V L "c" 4 191 "int8"
V L "n" 4 191 "int8"
V L "uc" 4 193 "int8"
V L "su" 4 194 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
F G "strchr" 4 205 "*int8(*int8 s,int8 c)"
V L "s" 4 205 "*int8"
V L "c" 4 205 "int8"
C L "strcspn" 4 19 4 "FUNCTION"
F G "strcspn" 4 217 "int8(*int8 s1,*int8 s2)"
V L "s1" 4 217 "*int8"
V L "s2" 4 217 "*int8"
V L "sc1" 4 219 "*int8"
V L "sc2" 4 219 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
F G "strpbrk" 4 232 "*int8(*int8 s1,*int8 s2)"
V L "s1" 4 232 "*int8"
V L "s2" 4 232 "*int8"
V L "sc1" 4 234 "*int8"
V L "sc2" 4 234 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
F G "strrchr" 4 247 "*int8(*int8 s,int8 c)"
V L "s" 4 247 "*int8"
V L "c" 4 247 "int8"
V L "p" 4 249 "*int8"
C L "strspn" 4 19 2 "FUNCTION"
F G "strspn" 4 262 "int8(*int8 s1,*int8 s2)"
V L "s1" 4 262 "*int8"
V L "s2" 4 262 "*int8"
V L "sc1" 4 264 "*int8"
V L "sc2" 4 264 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
F G "strstr" 4 281 "*int8(*int8 s1,*int8 s2)"
V L "s1" 4 281 "*int8"
V L "s2" 4 281 "*int8"
V L "s" 4 283 "*int8"
V L "t" 4 283 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
F G "strtok" 4 320 "*int8(*int8 s1,*int8 s2)"
V L "s1" 4 320 "*int8"
V L "s2" 4 320 "*int8"
V L "beg" 4 322 "*int8"
V L "end" 4 322 "*int8"
V L "save" 4 323 "*int8"
C L "strlen" 4 19 6 "FUNCTION"
F G "strlen" 4 369 "int8(*int8 s)"
V L "s" 4 369 "*int8"
V L "sc" 4 371 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
F G "stricmp" 4 380 "sint8(*int8 s1,*int8 s2)"
V L "s1" 4 380 "*int8"
V L "s2" 4 380 "*int8"
C L "strlwr" 4 19 3 "FUNCTION"
F G "strlwr" 4 394 "*int8(*int8 s)"
V L "s" 4 394 "*int8"
V L "p" 4 396 "*int8"
D G "_STDLIB" 7 12 ""
D G "RAND_MAX" 7 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 7 25 "1"
T G "div_t" 7 33 "{sint16 quot,sint16 rem}"
T G "ldiv_t" 7 38 "{sint32 quot,sint32 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 5 3 6 "FUNCTION"
C L "atoi" 7 43 2 "FUNCTION"
C L "atoi" 7 46 1 "*"
C L "atoi" 7 46 1 "*"
F G "atoi" 7 50 "sint16(*int8 s)"
V L "s" 7 50 "*int8" "Syntax: signed int32  atoi32(char * s)"
D G "atoi32" 7 56 "(s) atol(s)"
C L "atoi" 7 46 5 "FUNCTION"
F G "atoi48" 7 68 "?(*int8 s)"
V L "s" 7 68 "*int8" "Syntax: signed int64  atoi64(char * s)"
C L "atoi48" 7 46 2 "FUNCTION"
F G "atoi64" 7 73 "?(*int8 s)"
V L "s" 7 73 "*int8" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi64" 7 46 2 "FUNCTION"
F G "itoa" 7 79 "*int8(sint32 num,int16 base,*int8 s)"
V L "num" 7 79 "sint32"
V L "base" 7 79 "int16"
V L "s" 7 79 "*int8" "Standard template: signed int16  atol(char * s)"
C L "itoa" 7 81 1 "*"
C L "itoa" 7 81 1 "*"
F G "atol" 7 85 "sint32(*int8 s)"
V L "s" 7 85 "*int8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 7 87 1 "*"
C L "atol" 7 87 1 "*"
C L "atol" 7 87 1 "*"
C L "atol" 7 87 1 "*"
F G "strtol" 7 93 "sint32(*int8 s,*int8 endptr,sint16 base)"
V L "s" 7 93 "*int8"
V L "endptr" 7 93 "*int8"
V L "base" 7 93 "sint16" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 7 95 1 "*"
C L "strtol" 7 95 1 "*"
C L "strtol" 7 95 1 "*"
C L "strtol" 7 95 1 "*"
F G "strtoul" 7 101 "int32(*int8 s,*int8 endptr,sint16 base)"
V L "s" 7 101 "*int8"
V L "endptr" 7 101 "*int8"
V L "base" 7 101 "sint16" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 7 95 2 "FUNCTION"
C L "strtoul" 7 103 1 "*"
C L "strtoul" 7 103 1 "*"
C L "strtoul" 7 103 1 "*"
F G "strtof" 7 110 "float(*int8 s,*int8 endptr)"
V L "s" 7 110 "*int8"
V L "endptr" 7 110 "*int8"
F G "strtof48" 7 112 "?(*int8 s,*int8 endptr)"
V L "s" 7 112 "*int8"
V L "endptr" 7 112 "*int8"
F G "strtod" 7 113 "?(*int8 s,*int8 endptr)"
V L "s" 7 113 "*int8"
V L "endptr" 7 113 "*int8" "Standard template: float32 atof(char * s)"
C L "strtod" 7 120 1 "*"
D G "atof" 7 124 "(s)   strtof(s, 0)"
C L "strtod" 7 120 3 "FUNCTION"
C L "strtod" 7 130 1 "*"
D G "atof48" 7 134 "(s) strtof48(s, 0)"
C L "strtod" 7 130 1 "FUNCTION"
C L "strtod" 7 136 1 "*"
D G "atof64" 7 140 "(s) strtod(s, 0)"
C L "strtod" 7 136 1 "FUNCTION"
C L "strtod" 7 143 1 "*"
C L "strtod" 7 143 1 "*"
C L "strtod" 7 143 1 "*"
F G "atoe" 7 153 "float(*int8 s)"
V L "s" 7 153 "*int8" "Pseudo-random sequence generation functions"
C L "atoe" 7 143 1 "FUNCTION"
C L "atoe" 7 160 1 "*"
C L "atoe" 7 160 1 "*"
C L "atoe" 7 160 1 "*"
C L "atoe" 7 160 1 "*"
C L "atoe" 7 160 1 "*"
F G "rand" 7 169 "int16()"
C L "rand" 7 160 1 "FUNCTION"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
C L "rand" 7 171 1 "*"
F G "srand" 7 191 "void(int32 seed)"
V L "seed" 7 191 "int32" "Memory management functions"
C L "srand" 7 171 3 "FUNCTION"
F G "system" 7 205 "sint8(*int8 string)"
V L "string" 7 205 "*int8" "Searching and sorting utilities"
C L "system" 7 171 1 "FUNCTION"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 1 "*"
C L "system" 7 211 4 "*"
C L "system" 7 229 1 "*"
C L "system" 7 229 1 "*"
C L "system" 7 229 1 "*"
C L "system" 7 229 1 "*"
C L "system" 7 229 1 "*"
C L "system" 7 229 1 "*"
C L "system" 7 229 1 "*"
C L "system" 7 229 1 "*"
D G "labs" 7 249 "abs"
F G "div" 7 251 "div_t(sint16 numer,sint16 denom)"
V L "numer" 7 251 "sint16"
V L "denom" 7 251 "sint16"
F G "ldiv" 7 252 "ldiv_t(sint32 numer,sint32 denom)"
V L "numer" 7 252 "sint32"
V L "denom" 7 252 "sint32" "Multibyte character functions"
C L "ldiv" 7 229 4 "FUNCTION"
C L "ldiv" 5 2 7 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
F G "div" 7 274 "div_t()"
V L "numer" 7 274 "sint16"
V L "denom" 7 274 "sint16"
V L "val" 7 276 "div_t"
F G "ldiv" 7 282 "ldiv_t(sint16 denom,sint32 ,sint32 )"
V L "numer" 7 282 "sint32"
V L "denom" 7 282 "sint32"
V L "val" 7 284 "ldiv_t"
F G "atoe" 7 292 "float()"
V L "s" 7 292 "*int8"
V L "pow10" 7 294 "float"
V L "result" 7 295 "float"
V L "sign" 7 296 "int8"
V L "expsign" 7 297 "int8"
V L "c" 7 298 "int8"
V L "ptr" 7 299 "int8"
V L "i" 7 300 "int8"
V L "exp" 7 301 "float"
V L "expcnt" 7 302 "int8"
C L "atoe" 7 328 1 "FUNCTION"
F G "atoi" 7 429 "sint16()"
V L "s" 7 429 "*int8"
V L "result" 7 431 "sint16"
V L "sign" 7 432 "int16"
V L "base" 7 432 "int16"
V L "index" 7 432 "int16"
V L "c" 7 433 "int8"
C L "atoi" 7 328 1 "FUNCTION"
C L "atoi" 7 328 1 "FUNCTION"
C L "atoi" 7 328 1 "FUNCTION"
C L "atoi" 7 328 1 "FUNCTION"
C L "atoi" 7 328 1 "FUNCTION"
C L "atoi" 7 328 1 "FUNCTION"
F G "atol" 7 498 "sint32()"
V L "s" 7 498 "*int8"
V L "result" 7 500 "sint32"
V L "sign" 7 501 "int16"
V L "base" 7 501 "int16"
V L "index" 7 501 "int16"
V L "c" 7 502 "int8"
C L "atol" 7 328 1 "FUNCTION"
C L "atol" 7 328 1 "FUNCTION"
C L "atol" 7 328 1 "FUNCTION"
C L "atol" 7 328 1 "FUNCTION"
C L "mult_with10" 7 328 1 "FUNCTION"
F G "mult_with10" 7 565 "sint32(sint32 num)"
V L "num" 7 565 "sint32"
F G "atoi48" 7 639 "?()"
V L "s" 7 639 "*int8"
V L "result" 7 641 "?"
V L "sign" 7 642 "sint8"
V L "base" 7 642 "sint8"
V L "index" 7 642 "sint8"
V L "c" 7 643 "int8"
C L "atoi48" 7 328 1 "FUNCTION"
C L "atoi48" 7 328 1 "FUNCTION"
C L "atoi48" 7 328 1 "FUNCTION"
C L "atoi48" 7 328 1 "FUNCTION"
C L "atoi48" 7 328 1 "FUNCTION"
F G "atoi64" 7 704 "?()"
V L "s" 7 704 "*int8"
V L "result" 7 706 "?"
V L "sign" 7 707 "sint8"
V L "base" 7 707 "sint8"
V L "index" 7 707 "sint8"
V L "c" 7 708 "int8"
C L "atoi64" 7 328 1 "FUNCTION"
C L "atoi64" 7 328 1 "FUNCTION"
C L "atoi64" 7 328 1 "FUNCTION"
C L "atoi64" 7 328 1 "FUNCTION"
C L "atoi64" 7 328 1 "FUNCTION"
F G "itoa" 7 770 "*int8()"
V L "num" 7 770 "sint32"
V L "base" 7 770 "int16"
V L "s" 7 770 "*int8"
V L "temp" 7 772 "int32"
V L "i" 7 773 "int8"
V L "sign" 7 773 "int8"
V L "cnt" 7 773 "int8"
V L "c" 7 774 "int8"
C L "itoa" 7 328 1 "FUNCTION"
C L "itoa" 7 328 1 "FUNCTION"
C L "itoa" 7 328 1 "FUNCTION"
C L "itoa" 7 328 1 "FUNCTION"
C L "itoa" 7 328 1 "FUNCTION"
F G "strtof" 7 807 "float()"
V L "s" 7 807 "*int8"
V L "endptr" 7 807 "*int8"
V L "pow10" 7 809 "float"
V L "result" 7 810 "float"
V L "skip" 7 811 "int1"
V L "sign" 7 811 "int1"
V L "point" 7 811 "int1"
V L "c" 7 812 "int8"
V L "ptr" 7 813 "int8"
F G "strtof48" 7 880 "?()"
V L "s" 7 880 "*int8"
V L "endptr" 7 880 "*int8"
V L "pow10" 7 882 "?"
V L "result" 7 883 "?"
V L "skip" 7 884 "int1"
V L "sign" 7 884 "int1"
V L "point" 7 884 "int1"
V L "c" 7 885 "int8"
V L "ptr" 7 886 "int8"
F G "strtod" 7 952 "?()"
V L "s" 7 952 "*int8"
V L "endptr" 7 952 "*int8"
V L "pow10" 7 954 "?"
V L "result" 7 955 "?"
V L "skip" 7 956 "int1"
V L "sign" 7 956 "int1"
V L "point" 7 956 "int1"
V L "c" 7 957 "int8"
V L "ptr" 7 958 "int8"
F G "strtoul" 7 1025 "int32()"
V L "s" 7 1025 "*int8"
V L "endptr" 7 1025 "*int8"
V L "base" 7 1025 "sint16"
V L "sc" 7 1027 "*int8"
V L "s1" 7 1027 "*int8"
V L "sd" 7 1027 "*int8"
V L "x" 7 1028 "int32"
V L "sign" 7 1029 "int8"
V L "digits" 7 1030 "int8[1]"
C L "strtoul" 7 328 1 "FUNCTION"
C L "strtoul" 7 328 1 "FUNCTION"
C L "strtoul" 7 328 1 "FUNCTION"
F G "strtol" 7 1087 "sint32()"
V L "s" 7 1087 "*int8"
V L "endptr" 7 1087 "*int8"
V L "base" 7 1087 "sint16"
V L "sc" 7 1089 "*int8"
V L "s1" 7 1089 "*int8"
V L "sd" 7 1089 "*int8"
V L "x" 7 1090 "sint32"
V L "sign" 7 1091 "int8"
V L "digits" 7 1092 "int8[1]"
C L "strtol" 7 328 1 "FUNCTION"
C L "strtol" 7 328 1 "FUNCTION"
C L "strtol" 7 328 1 "FUNCTION"
F G "system" 7 1150 "sint8(*int8 s,int8 n)"
V L "string" 7 1150 "*int8"
F G "mblen" 7 1155 "sint8(*int8 string,int8 n)"
V L "s" 7 1155 "*int8"
V L "n" 7 1155 "int8"
F G "mbtowc" 7 1160 "sint8(*int8 pwc,*int8 s,int8 n)"
V L "pwc" 7 1160 "*int8"
V L "s" 7 1160 "*int8"
V L "n" 7 1160 "int8"
F G "wctomb" 7 1166 "sint8(*int8 s,int8 wchar)"
V L "s" 7 1166 "*int8"
V L "wchar" 7 1166 "int8"
F G "mbstowcs" 7 1172 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "pwcs" 7 1172 "*int8"
V L "s" 7 1172 "*int8"
V L "n" 7 1172 "int8"
F G "wcstombs" 7 1178 "int8(*int8 s,*int8 pwcs,int8 n)"
V L "s" 7 1178 "*int8"
V L "pwcs" 7 1178 "*int8"
V L "n" 7 1178 "int8"
V G "_Randseed" 7 1188 "int32"
F G "rand" 7 1190 "int16(int32 ,int32 )"
F G "srand" 7 1196 "void(*int8 p1,*int8 p2)"
V L "seed" 7 1196 "int32"
T G "*_Cmpfun" 7 1208 "sint16(int32 seed,*int8 p2)"
V L "p1" 7 1208 "*int8"
V L "p2" 7 1208 "*int8"
F G "qsort" 7 1213 "void(*int8 qdata,int16 qitems,int16 qsize,_Cmpfun cmp)"
V L "qdata" 7 1213 "*int8"
V L "qitems" 7 1213 "int16"
V L "qsize" 7 1213 "int16"
V L "cmp" 7 1213 "_Cmpfun"
V L "m" 7 1214 "int16"
V L "j" 7 1214 "int16"
V L "i" 7 1214 "int16"
V L "l" 7 1214 "int16"
V L "done" 7 1215 "int1"
V L "t" 7 1216 "int8[16]"
F G "bsearch" 7 1241 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "key" 7 1241 "*int8"
V L "base" 7 1241 "*int8"
V L "num" 7 1241 "int8"
V L "width" 7 1241 "int8"
V L "cmp" 7 1241 "_Cmpfun"
V L "p" 7 1243 "*int8"
V L "q" 7 1243 "*int8"
V L "n" 7 1244 "int8"
V L "pivot" 7 1245 "int8"
V L "val" 7 1246 "sint16"
C L "bsearch" 7 328 1 "FUNCTION"
C L "pctoxbee" 0 9 1 "FUNCTION"
F G "pctoxbee" 0 10 "void(int8 )"
V L "v" 0 14 "int8"
C L "pctoxbee" 0 9 1 "FUNCTION"
C L "xbeetopc" 0 9 1 "FUNCTION"
F G "xbeetopc" 0 21 "void(int8 )"
F G "MAIN" 0 27 "void()"
C L "MAIN" 0 9 2 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "bit_first" 2 0
F B "bit_last" 1 2
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "ext_int_edge" 1 2
F B "dsp_a" 1 2
F B "dsp_b" 1 2
F B "read_eeprom" 1 3
F B "write_eeprom" 2 3
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_memory" 1 0
F B "write_program_memory" 3 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_f" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_f" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_f" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_f" 0 0
F B "set_pullup" 1 2
F B "setup_wdt" 1 0
F B "restart_cause" 0 1
F B "restart_wdt" 0 0
F B "setup_oscillator" 1 3
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer1" 1 2
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer2" 1 2
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer3" 1 2
F B "get_timer3" 0 0
F B "set_timer3" 1 0
F B "get_timer23" 0 0
F B "set_timer23" 1 0
F B "setup_timer4" 1 2
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_timer5" 1 2
F B "get_timer5" 0 0
F B "set_timer5" 1 0
F B "get_timer45" 0 0
F B "set_timer45" 1 0
F B "setup_capture" 2 0
F B "get_capture" 1 2
F B "setup_compare" 2 0
F B "set_compare_time" 2 3
F B "set_pwm_duty" 2 0
F B "setup_low_volt_detect" 1 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "setup_spi3" 1 0
F B "spi_read3" 0 1
F B "spi_write3" 1 0
F B "spi_data_is_in3" 0 0
F B "setup_dci" 5 0
F B "dci_start" 0 0
F B "dci_write" 1 0
F B "dci_read" 0 0
F B "dci_transmit_ready" 0 0
F B "dci_data_received" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 2
F B "setup_uart" 1 2
